// *************************************** //
// *       Canonical class Entity        * //
// * generated by Mde-pach Python script * //
// *************************************** //

#include "../includes/Entity.class.hpp"

Entity::Entity(void)
{
	this->_env = NULL;
	this->_x = 1.0;
	this->_y = 1.0;
	this->_life = 1;
	this->_name = "default_enemy";
	this->_speed = 1.0;
	for (int i = 0; i < 1; i++)
		this->_display[i] = this->_display[i];
}

Entity::Entity(Env *env, std::string Name, double x, double y, std::string display[], int life, double speed)
{
	this->_env = env;
	this->_x = x;
	this->_y = y;
	this->_life = life;
	this->_name = Name;
	this->_speed = speed;
	for (int i = 0; i < 1; i++)
		this->_display[i] = display[i];
	
}

Entity::Entity(Entity const & src)
{
	*this = src;
}

Entity::~Entity(void)
{
	return ;
}

Entity&Entity::operator=(Entity const & rhs)
{
	this->_name = rhs.getName();
	this->_x = rhs.getX();
	this->_y = rhs.getY();
	this->_life = rhs.getLife();
	this->_speed = rhs.getSpeed();
	return *this;
}

std::string			Entity::getName(void) const
{
	return(this->_name);
}

int					Entity::getX(void) const
{
	return ((int)this->_x);
}

int					Entity::getY(void) const
{
	return ((int)this->_y);
}

int					Entity::getLife(void) const
{
	return (this->_life);
}

double					Entity::getSpeed(void) const
{
	return (this->_speed);
}

void				Entity::moveUp(void)
{
	if (this->_name == "Player" && this->_y > 0)
		this->_y -= 1;
	else
		this->_y -= this->_speed / this->_env->getRate();
}

void				Entity::moveDown(void)
{
	if (this->_name == "Player" && this->_y < this->_env->getMaxY() - 1)
		this->_y += 1;
	else
		this->_y +=  this->_speed / this->_env->getRate();
}

void				Entity::moveLeft(void)
{
	if (this->_name == "Player" && this->_x > 0)
		this->_x -= 1;
	else
		this->_x -= this->_speed / this->_env->getRate();
}

void				Entity::moveRight(void)
{
	if (this->_name == "Player" && this->_x < this->_env->getMaxX() - 1)
		this->_x += 1;
	else
		this->_x += this->_speed / this->_env->getRate();
}

void				Entity::printEntity(void)
{
	mvprintw(this->_y, this->_x, "%s", this->_display[0].c_str());

	//for (int i = 0; i < 1; i++)
	//	mvprintw(this->_y + i, this->_x, "%s", this->_display[i].c_str());
}

void				Entity::modifLife(int i)
{
	this->_life += i;
}
